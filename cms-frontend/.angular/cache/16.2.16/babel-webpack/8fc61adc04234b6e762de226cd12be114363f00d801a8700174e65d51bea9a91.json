{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-ui-loader\";\nimport * as i2 from \"src/app/services/user.service\";\nimport * as i3 from \"src/app/services/snackbar.service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nfunction ManageUserComponent_th_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageUserComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r5 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r5.name);\n  }\n}\nfunction ManageUserComponent_th_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageUserComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r6.email);\n  }\n}\nexport let ManageUserComponent = /*#__PURE__*/(() => {\n  class ManageUserComponent {\n    constructor(ngxService, userService, snackbarService, cdr) {\n      this.ngxService = ngxService;\n      this.userService = userService;\n      this.snackbarService = snackbarService;\n      this.cdr = cdr;\n      this.displayedColumns = ['name', 'email', 'contactnumber', 'status'];\n    }\n    ngOnInit() {\n      this.ngxService.start();\n      this.tableData();\n    }\n    tableData() {\n      this.userService.getUsers().subscribe(response => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(response);\n        this.cdr.detectChanges();\n      }, error => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n    handleChangeAction(status, id) {\n      this.ngxService.start();\n      let data = {\n        status: status,\n        id: id\n      };\n      this.userService.update(data).subscribe(response => {\n        this.ngxService.stop();\n        this.responseMessage = response?.message;\n        this.snackbarService.openSnackBar(this.responseMessage, \"Success\");\n      }, error => {\n        this.ngxService.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n    static {\n      this.ɵfac = function ManageUserComponent_Factory(t) {\n        return new (t || ManageUserComponent)(i0.ɵɵdirectiveInject(i1.NgxUiLoaderService), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SnackbarService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ManageUserComponent,\n        selectors: [[\"app-manage-user\"]],\n        decls: 20,\n        vars: 1,\n        consts: [[1, \"dashboard-title\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", 3, \"keyup\"], [\"input\", \"\"], [1, \"responsive_table\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"email\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n        template: function ManageUserComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\")(1, \"div\", 0)(2, \"h2\");\n            i0.ɵɵtext(3, \"Manage Users\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(4, \"hr\");\n            i0.ɵɵelementStart(5, \"mat-card\")(6, \"mat-form-field\", 1)(7, \"mat-label\");\n            i0.ɵɵtext(8, \"Filter\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"input\", 2, 3);\n            i0.ɵɵlistener(\"keyup\", function ManageUserComponent_Template_input_keyup_9_listener($event) {\n              return ctx.applyFilter($event);\n            });\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelement(11, \"hr\");\n            i0.ɵɵelementStart(12, \"div\", 4)(13, \"table\", 5);\n            i0.ɵɵelementContainerStart(14, 6);\n            i0.ɵɵtemplate(15, ManageUserComponent_th_15_Template, 2, 0, \"th\", 7);\n            i0.ɵɵtemplate(16, ManageUserComponent_td_16_Template, 2, 1, \"td\", 8);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementContainerStart(17, 9);\n            i0.ɵɵtemplate(18, ManageUserComponent_th_18_Template, 2, 0, \"th\", 7);\n            i0.ɵɵtemplate(19, ManageUserComponent_td_19_Template, 2, 1, \"td\", 8);\n            i0.ɵɵelementContainerEnd();\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(13);\n            i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n          }\n        },\n        dependencies: [i4.MatCard, i5.MatTable, i5.MatHeaderCellDef, i5.MatColumnDef, i5.MatCellDef, i5.MatHeaderCell, i5.MatCell, i6.MatFormField, i6.MatLabel, i7.MatInput],\n        styles: [\"mat-card[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{width:100%}\"]\n      });\n    }\n  }\n  return ManageUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}