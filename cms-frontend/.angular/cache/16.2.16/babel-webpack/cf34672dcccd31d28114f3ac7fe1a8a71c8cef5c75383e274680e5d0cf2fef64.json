{"ast":null,"code":"import { jwtDecode } from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"src/app/shared/menu-items\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"../../../shared/accordion/accordionanchor.directive\";\nimport * as i9 from \"../../../shared/accordion/accordionlink.directive\";\nimport * as i10 from \"../../../shared/accordion/accordion.directive\";\nconst _c0 = function (a1) {\n  return [\"/cafe\", a1];\n};\nfunction AppSidebarComponent_mat_list_item_1_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 4)(1, \"mat-icon\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menuitem_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, menuitem_r1.state));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuitem_r1.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(menuitem_r1.name);\n  }\n}\nfunction AppSidebarComponent_mat_list_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\", 2);\n    i0.ɵɵtemplate(1, AppSidebarComponent_mat_list_item_1_a_1_Template, 6, 5, \"a\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const menuitem_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"group\", menuitem_r1.state);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !menuitem_r1.role || ctx_r0.tokenPayload && menuitem_r1.role === ctx_r0.tokenPayload.role);\n  }\n}\nexport let AppSidebarComponent = /*#__PURE__*/(() => {\n  class AppSidebarComponent {\n    constructor(changeDetectorRef, media, menuItems) {\n      this.menuItems = menuItems;\n      this.token = localStorage.getItem('token');\n      this.tokenPayload = null;\n      this.decodeToken();\n      this.mobileQuery = media.matchMedia('(min-width: 768px)');\n      this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n      this.mobileQuery.addEventListener('change', this._mobileQueryListener);\n    }\n    decodeToken() {\n      try {\n        if (this.token) {\n          this.tokenPayload = jwtDecode(this.token);\n        }\n      } catch (error) {\n        console.error('Invalid token:', error);\n        this.tokenPayload = null;\n      }\n    }\n    ngOnDestroy() {\n      this.mobileQuery.removeEventListener('change', this._mobileQueryListener);\n    }\n    static {\n      this.ɵfac = function AppSidebarComponent_Factory(t) {\n        return new (t || AppSidebarComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.MediaMatcher), i0.ɵɵdirectiveInject(i2.MenuItems));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppSidebarComponent,\n        selectors: [[\"app-sidebar\"]],\n        decls: 2,\n        vars: 1,\n        consts: [[\"appAccordion\", \"\"], [\"appAccordionLink\", \"\", \"routerLinkActive\", \"selected\", 3, \"group\", 4, \"ngFor\", \"ngForOf\"], [\"appAccordionLink\", \"\", \"routerLinkActive\", \"selected\", 3, \"group\"], [\"matListItemTitle\", \"\", \"appAccordionToggle\", \"\", 3, \"routerLink\", 4, \"ngIf\"], [\"matListItemTitle\", \"\", \"appAccordionToggle\", \"\", 3, \"routerLink\"], [\"fxFlex\", \"\"]],\n        template: function AppSidebarComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-nav-list\", 0);\n            i0.ɵɵtemplate(1, AppSidebarComponent_mat_list_item_1_Template, 2, 2, \"mat-list-item\", 1);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.menuItems.getMenuItems());\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i4.RouterLink, i4.RouterLinkActive, i5.MatIcon, i6.MatNavList, i6.MatListItem, i6.MatListItemTitle, i7.DefaultFlexDirective, i8.AccordionAnchorDirective, i9.AccordionLinkDirective, i10.AccordionDirective],\n        styles: [\"mat-nav-list[_ngcontent-%COMP%]   .selected[_ngcontent-%COMP%]{background-color:#c2185b;color:#fff}.list-links[_ngcontent-%COMP%]{text-decoration:none;padding:2.5rem 1.5rem}\"]\n      });\n    }\n  }\n  return AppSidebarComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}